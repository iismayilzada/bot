import disnake
from disnake.ext import commands
import random
import asyncio

import config
import database

class InventoryMenu(disnake.ui.View):
    def __init__(self, bot_instance: commands.Bot):
        super().__init__(timeout=180)
        self.bot_instance = bot_instance

    async def on_timeout(self):
        for item in self.children:
            if isinstance(item, (disnake.ui.Button, disnake.ui.Select)):
                item.disabled = True
        if self.message:
            try:
                await self.message.edit(content="–ú–µ–Ω—é –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏—Å—Ç–µ–∫–ª–æ.", view=self)
            except disnake.NotFound:
                pass

    @disnake.ui.button(label="–ú–æ–∏ –†–æ–ª–∏", style=disnake.ButtonStyle.blurple, custom_id="inventory_roles")
    async def roles_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_roles_inventory(inter)

    @disnake.ui.button(label="–ú–æ–∏ –ö–µ–π—Å—ã", style=disnake.ButtonStyle.green, custom_id="inventory_cases")
    async def cases_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_cases_inventory(inter)

    @disnake.ui.button(label="–ú–æ–∏ –ö—É–ø–æ–Ω—ã", style=disnake.ButtonStyle.red, custom_id="inventory_coupons")
    async def coupons_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_coupons_inventory(inter)

    async def send_roles_inventory(self, inter: disnake.MessageInteraction):
        items = database.get_inventory_items(inter.author.id)
        user_roles = [item for item in items if item[0] == "role"]

        embed = disnake.Embed(
            title="üëë –í–∞—à–∏ –ö—É–ø–ª–µ–Ω–Ω—ã–µ –†–æ–ª–∏",
            description="–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫—É–ø–ª–µ–Ω–Ω—ã–µ –≤–∞–º–∏ —Ä–æ–ª–∏. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–¥–µ—Ç—å –∏–ª–∏ —Å–Ω—è—Ç—å –∏—Ö.",
            color=disnake.Color.dark_purple()
        )
        embed.set_thumbnail(url=inter.author.avatar.url if inter.author.avatar else inter.author.default_avatar.url)

        options = []
        if not user_roles:
            embed.description += "\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π."
        else:
            for item_type, role_id_str, quantity in user_roles:
                role_id = int(role_id_str)
                role = inter.guild.get_role(role_id)
                if role:
                    options.append(disnake.SelectOption(label=f"{role.name}", value=str(role.id)))
                else:
                    # –ï—Å–ª–∏ —Ä–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–¥–∞–ª–∏—Ç—å –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
                    options.append(disnake.SelectOption(label=f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å (ID: {role_id}) - –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è", value=f"delete_missing_role_{role_id}"))


        view = disnake.ui.View()
        if options:
            select = disnake.ui.StringSelect(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è...",
                custom_id="select_role_action",
                options=options
            )
            view.add_item(select)
        view.add_item(disnake.ui.Button(label="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", style=disnake.ButtonStyle.secondary, custom_id="inventory_back_to_main"))

        await inter.response.edit_message(embed=embed, view=view)

    async def send_cases_inventory(self, inter: disnake.MessageInteraction):
        items = database.get_inventory_items(inter.author.id)
        user_cases = [item for item in items if item[0] == "case"]

        embed = disnake.Embed(
            title="üéÅ –í–∞—à–∏ –ö–µ–π—Å—ã",
            description="–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–∞—à–∏ –∫–µ–π—Å—ã. –û—Ç–∫—Ä–æ–π—Ç–µ –∏—Ö, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑—ã!",
            color=disnake.Color.dark_gold()
        )
        embed.set_thumbnail(url=inter.author.avatar.url if inter.author.avatar else inter.author.default_avatar.url)

        options = []
        if not user_cases:
            embed.description += "\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–µ–π—Å–æ–≤."
        else:
            for item_type, case_type, quantity in user_cases:
                options.append(disnake.SelectOption(label=f"{case_type.replace('_', ' ').title()} ({quantity})", value=case_type))

        view = disnake.ui.View()
        if options:
            select = disnake.ui.StringSelect(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è...",
                custom_id="select_case_open",
                options=options
            )
            view.add_item(select)
        view.add_item(disnake.ui.Button(label="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", style=disnake.ButtonStyle.secondary, custom_id="inventory_back_to_main"))

        await inter.response.edit_message(embed=embed, view=view)

    async def send_coupons_inventory(self, inter: disnake.MessageInteraction):
        items = database.get_inventory_items(inter.author.id)
        user_coupons = [item for item in items if item[0] == "coupon"]

        embed = disnake.Embed(
            title="üéüÔ∏è –í–∞—à–∏ –ö—É–ø–æ–Ω—ã",
            description="–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–∞—à–∏ –∫—É–ø–æ–Ω—ã. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∏—Ö, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å—ã!",
            color=disnake.Color.dark_magenta()
        )
        embed.set_thumbnail(url=inter.author.avatar.url if inter.author.avatar else inter.author.default_avatar.url)

        options = []
        if not user_coupons:
            embed.description += "\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫—É–ø–æ–Ω–æ–≤."
        else:
            for item_type, coupon_type, quantity in user_coupons:
                options.append(disnake.SelectOption(label=f"{coupon_type.replace('_', ' ').title()} ({quantity})", value=coupon_type))

        view = disnake.ui.View()
        if options:
            select = disnake.ui.StringSelect(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–ø–æ–Ω –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...",
                custom_id="select_coupon_activate",
                options=options
            )
            view.add_item(select)
        view.add_item(disnake.ui.Button(label="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", style=disnake.ButtonStyle.secondary, custom_id="inventory_back_to_main"))

        await inter.response.edit_message(embed=embed, view=view)


class Inventory(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener("on_button_click")
    async def on_inventory_button_click(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id == "open_inventory_menu":
            embed = disnake.Embed(
                title="üéí –í–∞—à–µ –ú–µ–Ω—é –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–µ–¥–º–µ—Ç–æ–≤:",
                color=disnake.Color.gold()
            )
            embed.set_footer(text=f"–í–∞—à –±–∞–ª–∞–Ω—Å: {database.get_user_data(inter.author.id)[1]:,} –º–æ–Ω–µ—Ç")
            view = InventoryMenu(self.bot)
            await inter.response.send_message(embed=embed, view=view, ephemeral=True)

        elif inter.component.custom_id == "inventory_back_to_main":
            embed = disnake.Embed(
                title="üéí –í–∞—à–µ –ú–µ–Ω—é –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–µ–¥–º–µ—Ç–æ–≤:",
                color=disnake.Color.gold()
            )
            embed.set_footer(text=f"–í–∞—à –±–∞–ª–∞–Ω—Å: {database.get_user_data(inter.author.id)[1]:,} –º–æ–Ω–µ—Ç")
            view = InventoryMenu(self.bot)
            await inter.response.edit_message(embed=embed, view=view)

        elif inter.component.custom_id.startswith("toggle_role_"):
            role_id = int(inter.component.custom_id.split("_")[2])
            role = inter.guild.get_role(role_id)
            if not role:
                await inter.response.send_message("–≠—Ç–∞ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.", ephemeral=True)
                await inter.message.edit(view=None) # –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
                return

            member = inter.author
            if role in member.roles:
                try:
                    await member.remove_roles(role)
                    await inter.response.send_message(f"–í—ã —Å–Ω—è–ª–∏ —Ä–æ–ª—å **{role.name}**.", ephemeral=True)
                except disnake.Forbidden:
                    await inter.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è —ç—Ç–æ–π —Ä–æ–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.", ephemeral=True)
                except Exception as e:
                    await inter.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏: {e}", ephemeral=True)
            else:
                try:
                    await member.add_roles(role)
                    await inter.response.send_message(f"–í—ã –Ω–∞–¥–µ–ª–∏ —Ä–æ–ª—å **{role.name}**.", ephemeral=True)
                except disnake.Forbidden:
                    await inter.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ —ç—Ç–æ–π —Ä–æ–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–æ–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.", ephemeral=True)
                except Exception as e:
                    await inter.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏: {e}", ephemeral=True)
            
            # –ü–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ä–æ–ª—å—é, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É —Ä–æ–ª–µ–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_roles_inventory(inter)


        elif inter.component.custom_id.startswith("confirm_delete_missing_role_"):
            role_id = int(inter.component.custom_id.split("_")[3])
            database.remove_inventory_item(inter.author.id, "role", str(role_id))
            await inter.response.edit_message(content=f"–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è —Ä–æ–ª—å (ID: `{role_id}`) —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –≤–∞—à–µ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è.", embed=None, view=None)
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É —Å–ø–∏—Å–∫—É —Ä–æ–ª–µ–π
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_roles_inventory(inter)

        elif inter.component.custom_id == "cancel_action":
            await inter.response.edit_message(content="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", embed=None, view=None)

        elif inter.component.custom_id.startswith("confirm_open_case_"):
            case_type = inter.component.custom_id.split("_")[3]
            quantity = database.get_inventory_item_quantity(inter.author.id, "case", case_type)

            if quantity < 1:
                await inter.response.edit_message(content="–£ –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ –∫–µ–π—Å–∞.", embed=None, view=None)
                return

            database.remove_inventory_item(inter.author.id, "case", case_type, 1)

            # –õ–æ–≥–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ (–ø—Ä–∏–º–µ—Ä)
            prizes = {
                "fire_case": {
                    "common": [500, 1000, 1500],
                    "uncommon": [2000, 2500],
                    "rare": [3000, 4000],
                    "epic": [5000, 7000]
                },
                "blazing_case": {
                    "common": [1000, 2000, 3000],
                    "uncommon": [4000, 5000],
                    "rare": [6000, 8000],
                    "epic": [10000, 15000]
                },
                "hell_case": {
                    "common": [2000, 4000, 6000],
                    "uncommon": [8000, 10000],
                    "rare": [12000, 15000],
                    "epic": [20000, 30000]
                }
            }
            
            # –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
            chances = {
                "common": 60,
                "uncommon": 25,
                "rare": 10,
                "epic": 5
            }

            rand = random.randint(1, 100)
            prize_rarity = ""
            current_chance = 0
            for rarity, chance in chances.items():
                current_chance += chance
                if rand <= current_chance:
                    prize_rarity = rarity
                    break
            
            reward_amount = random.choice(prizes[case_type][prize_rarity])
            database.update_user_balance(inter.author.id, reward_amount)

            embed = disnake.Embed(
                title=f"üéâ –í—ã –û—Ç–∫—Ä—ã–ª–∏ {case_type.replace('_', ' ').title()}!",
                description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ `{reward_amount:,}` –º–æ–Ω–µ—Ç!",
                color=disnake.Color.orange()
            )
            embed.add_field(name="–†–µ–¥–∫–æ—Å—Ç—å", value=prize_rarity.title(), inline=True)
            embed.set_footer(text=f"–û—Å—Ç–∞–ª–æ—Å—å {quantity - 1} –∫–µ–π—Å–æ–≤ {case_type.replace('_', ' ').title()} | –í–∞—à –±–∞–ª–∞–Ω—Å: {database.get_user_data(inter.author.id)[1]:,} –º–æ–Ω–µ—Ç")
            await inter.response.edit_message(embed=embed, view=None)

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É –∫–µ–π—Å–æ–≤
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_cases_inventory(inter)

        elif inter.component.custom_id.startswith("confirm_activate_coupon_"):
            coupon_type = inter.component.custom_id.split("_")[3]
            quantity = database.get_inventory_item_quantity(inter.author.id, "coupon", coupon_type)

            if quantity < 1:
                await inter.response.edit_message(content="–£ –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç —ç—Ç–æ–≥–æ –∫—É–ø–æ–Ω–∞.", embed=None, view=None)
                return

            database.remove_inventory_item(inter.author.id, "coupon", coupon_type, 1)

            # –õ–æ–≥–∏–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫—É–ø–æ–Ω–∞
            coupon_name = coupon_type.replace('_', ' ').title()
            embed = disnake.Embed(
                title=f"üéüÔ∏è –ö—É–ø–æ–Ω –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: {coupon_name}",
                color=disnake.Color.dark_magenta()
            )

            if coupon_type == "nitro_coupon":
                embed.description = "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∫—É–ø–æ–Ω –Ω–∞ **Discord Nitro!**"
                embed.set_footer(text="–û–∂–∏–¥–∞–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –≤—ã–¥–∞—á–∏.")
                # –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∏–ª–∏ –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤
                admin_channel = self.bot.get_channel(config.MOD_LOG_CHANNEL_ID) # –ò–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
                if admin_channel:
                    await admin_channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inter.author.mention} (ID: {inter.author.id}) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∫—É–ø–æ–Ω –Ω–∞ Discord Nitro. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º –¥–ª—è –≤—ã–¥–∞—á–∏.")
            elif coupon_type == "decoration_coupon":
                embed.description = "–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –∫—É–ø–æ–Ω –Ω–∞ **—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è!**"
                embed.set_footer(text="–û–∂–∏–¥–∞–π—Ç–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞.")
                # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
                admin_channel = self.bot.get_channel(config.MOD_LOG_CHANNEL_ID)
                if admin_channel:
                    await admin_channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inter.author.mention} (ID: {inter.author.id}) –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –∫—É–ø–æ–Ω –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º.")
            else:
                embed.description = f"–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫—É–ø–æ–Ω: **{coupon_name}**."

            await inter.response.edit_message(embed=embed, view=None)

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É –∫—É–ø–æ–Ω–æ–≤
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_coupons_inventory(inter)


    @commands.Cog.listener("on_dropdown")
    async def on_inventory_dropdown(self, inter: disnake.MessageInteraction):
        selected_item_id = inter.values[0]

        if inter.component.custom_id == "select_role_action":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ "—É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ä–æ–ª—å"
            if selected_item_id.startswith("delete_missing_role_"):
                role_id = int(selected_item_id.split("_")[3])
                embed = disnake.Embed(
                    title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏",
                    description=f"–†–æ–ª—å —Å ID `{role_id}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –µ—ë –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è?",
                    color=disnake.Color.orange()
                )
                view = disnake.ui.View(timeout=60)
                view.add_item(disnake.ui.Button(label="–î–∞, —É–¥–∞–ª–∏—Ç—å", style=disnake.ButtonStyle.red, custom_id=f"confirm_delete_missing_role_{role_id}"))
                view.add_item(disnake.ui.Button(label="–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å", style=disnake.ButtonStyle.secondary, custom_id="cancel_action"))
                await inter.response.edit_message(embed=embed, view=view)
            else:
                role_id = int(selected_item_id)
                role = inter.guild.get_role(role_id)
                if not role:
                    await inter.response.send_message("–≠—Ç–∞ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.", ephemeral=True)
                    return

                embed = disnake.Embed(
                    title=f"–î–µ–π—Å—Ç–≤–∏–µ —Å —Ä–æ–ª—å—é: {role.name}",
                    description=f"–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å —Ä–æ–ª—å—é **{role.name}**?",
                    color=disnake.Color.blue()
                )
                view = disnake.ui.View(timeout=60)
                view.add_item(disnake.ui.Button(label="–ù–∞–¥–µ—Ç—å/–°–Ω—è—Ç—å –†–æ–ª—å", style=disnake.ButtonStyle.primary, custom_id=f"toggle_role_{role_id}"))
                view.add_item(disnake.ui.Button(label="–ù–∞–∑–∞–¥", style=disnake.ButtonStyle.secondary, custom_id="inventory_roles_back")) # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π
                await inter.response.edit_message(embed=embed, view=view)

        elif inter.component.custom_id == "select_case_open":
            case_type = selected_item_id
            quantity = database.get_inventory_item_quantity(inter.author.id, "case", case_type)
            case_name = case_type.replace('_', ' ').title()

            embed = disnake.Embed(
                title=f"–û—Ç–∫—Ä—ã—Ç—å –ö–µ–π—Å: {case_name}",
                description=f"–£ –≤–∞—Å **{quantity}** –∫–µ–π—Å–æ–≤ **{case_name}**.\n–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –æ–¥–∏–Ω?",
                color=disnake.Color.orange()
            )
            view = disnake.ui.View(timeout=60)
            view.add_item(disnake.ui.Button(label="–û—Ç–∫—Ä—ã—Ç—å 1 –∫–µ–π—Å", style=disnake.ButtonStyle.green, custom_id=f"confirm_open_case_{case_type}"))
            view.add_item(disnake.ui.Button(label="–ù–∞–∑–∞–¥", style=disnake.ButtonStyle.secondary, custom_id="inventory_cases_back"))
            await inter.response.edit_message(embed=embed, view=view)

        elif inter.component.custom_id == "select_coupon_activate":
            coupon_type = selected_item_id
            quantity = database.get_inventory_item_quantity(inter.author.id, "coupon", coupon_type)
            coupon_name = coupon_type.replace('_', ' ').title()

            embed = disnake.Embed(
                title=f"–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ö—É–ø–æ–Ω: {coupon_name}",
                description=f"–£ –≤–∞—Å **{quantity}** –∫—É–ø–æ–Ω–æ–≤ **{coupon_name}**.\n–í—ã —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω?",
                color=disnake.Color.orange()
            )
            view = disnake.ui.View(timeout=60)
            view.add_item(disnake.ui.Button(label="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å 1 –∫—É–ø–æ–Ω", style=disnake.ButtonStyle.green, custom_id=f"confirm_activate_coupon_{coupon_type}"))
            view.add_item(disnake.ui.Button(label="–ù–∞–∑–∞–¥", style=disnake.ButtonStyle.secondary, custom_id="inventory_coupons_back"))
            await inter.response.edit_message(embed=embed, view=view)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥" –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    @commands.Cog.listener("on_button_click")
    async def on_inventory_category_back_button_click(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id == "inventory_roles_back":
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_roles_inventory(inter) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —Å–ø–∏—Å–∫—É —Ä–æ–ª–µ–π

        elif inter.component.custom_id == "inventory_cases_back":
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_cases_inventory(inter) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —Å–ø–∏—Å–∫—É –∫–µ–π—Å–æ–≤

        elif inter.component.custom_id == "inventory_coupons_back":
            inventory_menu_view = InventoryMenu(self.bot)
            await inventory_menu_view.send_coupons_inventory(inter) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ —Å–ø–∏—Å–∫—É –∫—É–ø–æ–Ω–æ–≤


def setup(bot):
    bot.add_cog(Inventory(bot))