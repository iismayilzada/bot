import disnake
from disnake.ext import commands, tasks
import datetime
import os
import asyncio

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
import config
import database

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
database.init_db()

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
if not os.path.exists('data'):
    os.makedirs('data')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = commands.Bot(command_prefix='!', intents=config.INTENTS, help_command=None)

# –°–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –±–æ—Ç –≥–æ—Ç–æ–≤
@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É!')
    print(f'ID –±–æ—Ç–∞: {bot.user.id}')
    print('--------------------')

    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –±–æ—Ç –≥–æ—Ç–æ–≤ –∏ –∫—ç—à–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–ø—É—Å–∫–∞—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —ç—Ç–æ–≥–æ.
    await bot.wait_until_ready()

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã
    if not check_warn_expiry.is_running():
        check_warn_expiry.start()
    if not send_initial_shop_message.is_running():
        send_initial_shop_message.start()
    if not send_initial_inventory_message.is_running():
        send_initial_inventory_message.start()
    if not monthly_top_reset.is_running():
        monthly_top_reset.start()
    print("–§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã.")


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
@tasks.loop(hours=1)
async def check_warn_expiry():
    await bot.wait_until_ready() # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –±–æ—Ç –≥–æ—Ç–æ–≤
    now = datetime.datetime.now()
    with database.sqlite3.connect(database.DATABASE_NAME) as db:
        cursor = db.cursor()
        cursor.execute("""
            SELECT warn_id, user_id, reason FROM warnings
            WHERE is_active = 1 AND expire_date <= ?
        """, (now.isoformat(),))
        expired_warnings = cursor.fetchall()

        for warn_id, user_id, reason in expired_warnings:
            database.remove_warning(warn_id) # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–µ
            user = bot.get_user(user_id)
            if user:
                try:
                    await user.send(f"–í–∞—à–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ **#{warn_id}** –ø–æ –ø—Ä–∏—á–∏–Ω–µ: **'{reason}'** –∏—Å—Ç–µ–∫–ª–æ.")
                except disnake.HTTPException:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id} –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.")

            # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
            mod_log_channel = bot.get_channel(config.MOD_LOG_CHANNEL_ID)
            if mod_log_channel:
                embed = disnake.Embed(
                    title="–ò—Å—Ç–µ—á–µ–Ω–∏–µ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
                    description=f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è <@{user_id}> (ID: {user_id}) –∏—Å—Ç–µ–∫–ª–æ.",
                    color=disnake.Color.orange(),
                    timestamp=now
                )
                embed.add_field(name="ID –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è", value=warn_id, inline=True)
                embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason, inline=True)
                await mod_log_channel.send(embed=embed)
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞
@tasks.loop(minutes=30) # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
async def send_initial_shop_message():
    await bot.wait_until_ready()
    shop_channel = bot.get_channel(config.SHOP_CHANNEL_ID)
    if shop_channel:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        async for msg in shop_channel.history(limit=5): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
            if msg.author == bot.user and msg.embeds and "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω" in msg.embeds[0].title:
                return # –°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ

        embed = disnake.Embed(
            title="üõí –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω!",
            description="–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —É–ª—É—á—à–µ–Ω–∏—è –∑–∞ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—É—é –≤–∞–ª—é—Ç—É.",
            color=disnake.Color.blue()
        )
        embed.set_thumbnail(url="https://i.imgur.com/your_shop_icon.png") # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –∏–∫–æ–Ω–∫—É –º–∞–≥–∞–∑–∏–Ω–∞
        embed.add_field(name="–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?", value="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞.", inline=False)

        view = disnake.ui.View()
        view.add_item(disnake.ui.Button(style=disnake.ButtonStyle.green, label="–û—Ç–∫—Ä—ã—Ç—å –ú–∞–≥–∞–∑–∏–Ω", custom_id="open_shop_menu"))

        await shop_channel.send(embed=embed, view=view)
        print(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {shop_channel.name}")

# –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
@tasks.loop(minutes=30) # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
async def send_initial_inventory_message():
    await bot.wait_until_ready()
    inventory_channel = bot.get_channel(config.INVENTORY_CHANNEL_ID)
    if inventory_channel:
        async for msg in inventory_channel.history(limit=5):
            if msg.author == bot.user and msg.embeds and "üéí –í–∞—à –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å" in msg.embeds[0].title:
                return

        embed = disnake.Embed(
            title="üéí –í–∞—à –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å",
            description="–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –≤–∞—à–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã: –∫–µ–π—Å—ã, –∫—É–ø–æ–Ω—ã, —Ä–æ–ª–∏.",
            color=disnake.Color.gold()
        )
        embed.set_thumbnail(url="https://i.imgur.com/your_inventory_icon.png") # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –∏–∫–æ–Ω–∫—É –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
        embed.add_field(name="–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?", value="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.", inline=False)

        view = disnake.ui.View()
        view.add_item(disnake.ui.Button(style=disnake.ButtonStyle.blurple, label="–û—Ç–∫—Ä—ã—Ç—å –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", custom_id="open_inventory_menu"))

        await inventory_channel.send(embed=embed, view=view)
        print(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {inventory_channel.name}")


# –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π —Å–±—Ä–æ—Å —Ç–æ–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
_last_top_reset_month = None # –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–µ—Å—è—Ü–∞ —Å–±—Ä–æ—Å–∞

@tasks.loop(hours=1) # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —á–∞—Å
async def monthly_top_reset():
    await bot.wait_until_ready()
    global _last_top_reset_month
    now = datetime.datetime.now()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞
    if now.day == config.TOP_MONTH_RESET_DAY:
        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–±—Ä–æ—Å –±—ã–ª —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ
        if _last_top_reset_month != now.month:
            top_channel = bot.get_channel(config.TOP_MONTH_CHANNEL_ID)
            if top_channel:
                leaderboard = database.get_leaderboard_month_messages()
                if leaderboard:
                    embed = disnake.Embed(
                        title="üèÜ –ò—Ç–æ–≥–∏ –ú–µ—Å—è—á–Ω–æ–≥–æ –¢–æ–ø–∞ –ø–æ –°–æ–æ–±—â–µ–Ω–∏—è–º!",
                        description="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–æ—à–ª–æ–≥–æ –º–µ—Å—è—Ü–∞!",
                        color=disnake.Color.green(),
                        timestamp=now
                    )
                    for i, (user_id, count) in enumerate(leaderboard):
                        user = bot.get_user(user_id) # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
                        username = user.display_name if user else f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ({user_id})"
                        embed.add_field(name=f"#{i+1} {username}", value=f"–°–æ–æ–±—â–µ–Ω–∏–π: `{count}`", inline=False)
                    await top_channel.send(embed=embed)
                database.reset_month_messages() # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
                _last_top_reset_month = now.month # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Å—è—Ü –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–±—Ä–æ—Å–∞
                print("–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π —Ç–æ–ø —Å–æ–æ–±—â–µ–Ω–∏–π —Å–±—Ä–æ—à–µ–Ω.")
            else:
                print(f"–ö–∞–Ω–∞–ª –¥–ª—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Ç–æ–ø–∞ (ID: {config.TOP_MONTH_CHANNEL_ID}) –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–≥–æ–≤
initial_extensions = [
    "cogs.economy",
    "cogs.moderation",
    "cogs.shop",
    "cogs.inventory",
    "cogs.events" # –≠—Ç–æ—Ç –∫–æ–≥ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–æ–ø–∞
]

for extension in initial_extensions:
    try:
        bot.load_extension(extension)
        print(f"–ó–∞–≥—Ä—É–∂–µ–Ω –∫–æ–≥: {extension}")
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–≥ {extension}: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(config.BOT_TOKEN)