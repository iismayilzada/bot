import disnake
from disnake.ext import commands
import config
import database

class ShopCategoriesView(disnake.ui.View):
    def __init__(self, bot_instance: commands.Bot):
        super().__init__(timeout=180) # –¢–∞–π–º-–∞—É—Ç 3 –º–∏–Ω—É—Ç—ã
        self.bot_instance = bot_instance

    async def on_timeout(self):
        for item in self.children:
            if isinstance(item, (disnake.ui.Button, disnake.ui.Select)):
                item.disabled = True
        if self.message:
            try:
                await self.message.edit(content="–ú–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞ –∏—Å—Ç–µ–∫–ª–æ.", view=self)
            except disnake.NotFound:
                pass

    @disnake.ui.button(label="–ö–µ–π—Å—ã", style=disnake.ButtonStyle.blurple, custom_id="shop_category_cases")
    async def cases_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_cases_shop(inter)

    @disnake.ui.button(label="–†–æ–ª–∏", style=disnake.ButtonStyle.green, custom_id="shop_category_roles")
    async def roles_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_roles_shop(inter)

    @disnake.ui.button(label="–ö—É–ø–æ–Ω—ã", style=disnake.ButtonStyle.red, custom_id="shop_category_coupons")
    async def coupons_button(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await self.send_coupons_shop(inter)

    async def send_cases_shop(self, inter: disnake.MessageInteraction):
        embed = disnake.Embed(
            title="üéÅ –ú–∞–≥–∞–∑–∏–Ω –ö–µ–π—Å–æ–≤",
            description="–û—Ç–∫—Ä–æ–π—Ç–µ –∫–µ–π—Å—ã –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã!",
            color=disnake.Color.dark_gold()
        )
        # embed.set_thumbnail(url="https://i.imgur.com/your_case_icon.png") # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –∏–∫–æ–Ω–∫—É

        options = []
        for case_type, price in config.CASE_PRICES.items():
            options.append(disnake.SelectOption(
                label=f"{case_type.replace('_', ' ').title()} - {price:,} –º–æ–Ω–µ—Ç",
                value=case_type
            ))

        view = disnake.ui.View()
        if options:
            select = disnake.ui.StringSelect(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å –¥–ª—è –ø–æ–∫—É–ø–∫–∏...",
                custom_id="select_buy_case",
                options=options
            )
            view.add_item(select)
        view.add_item(disnake.ui.Button(label="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", style=disnake.ButtonStyle.secondary, custom_id="shop_back_to_main"))

        await inter.response.edit_message(embed=embed, view=view)

    async def send_roles_shop(self, inter: disnake.MessageInteraction):
        embed = disnake.Embed(
            title="üëë –ú–∞–≥–∞–∑–∏–Ω –†–æ–ª–µ–π",
            description="–ö—É–ø–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ä–æ–ª–∏ –∏ –≤—ã–¥–µ–ª–∏—Ç–µ—Å—å —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö!",
            color=disnake.Color.dark_purple()
        )
        # embed.set_thumbnail(url="https://i.imgur.com/your_role_icon.png") # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –∏–∫–æ–Ω–∫—É

        shop_roles = database.get_shop_roles()
        options = []
        if shop_roles:
            for role_id, price in shop_roles:
                role = inter.guild.get_role(role_id)
                if role:
                    options.append(disnake.SelectOption(
                        label=f"{role.name} - {price:,} –º–æ–Ω–µ—Ç",
                        value=str(role.id)
                    ))
                else:
                    # –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –æ–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞
                    pass
        if not options:
            embed.description += "\n\n–í –º–∞–≥–∞–∑–∏–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ä–æ–ª–µ–π –∏–ª–∏ –æ–Ω–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã."

        view = disnake.ui.View()
        if options:
            select = disnake.ui.StringSelect(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø–æ–∫—É–ø–∫–∏...",
                custom_id="select_buy_role",
                options=options
            )
            view.add_item(select)
        view.add_item(disnake.ui.Button(label="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", style=disnake.ButtonStyle.secondary, custom_id="shop_back_to_main"))

        await inter.response.edit_message(embed=embed, view=view)

    async def send_coupons_shop(self, inter: disnake.MessageInteraction):
        embed = disnake.Embed(
            title="üéüÔ∏è –ú–∞–≥–∞–∑–∏–Ω –ö—É–ø–æ–Ω–æ–≤",
            description="–ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∫—É–ø–æ–Ω—ã –Ω–∞ –æ—Å–æ–±—ã–µ –±–æ–Ω—É—Å—ã!",
            color=disnake.Color.dark_magenta()
        )
        # embed.set_thumbnail(url="https://i.imgur.com/your_coupon_icon.png") # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é –∏–∫–æ–Ω–∫—É

        options = []
        for coupon_type, price in config.COUPON_PRICES.items():
            options.append(disnake.SelectOption(
                label=f"{coupon_type.replace('_', ' ').title()} - {price:,} –º–æ–Ω–µ—Ç",
                value=coupon_type
            ))

        view = disnake.ui.View()
        if options:
            select = disnake.ui.StringSelect(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–ø–æ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏...",
                custom_id="select_buy_coupon",
                options=options
            )
            view.add_item(select)
        view.add_item(disnake.ui.Button(label="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", style=disnake.ButtonStyle.secondary, custom_id="shop_back_to_main"))

        await inter.response.edit_message(embed=embed, view=view)


class Shop(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command(name="addrole", description="–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å –≤ –º–∞–≥–∞–∑–∏–Ω. –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.")
    @commands.has_role(config.ADMIN_ROLE_ID)
    async def addrole(self, inter: disnake.ApplicationCommandInteraction, role: disnake.Role, price: int):
        if price <= 0:
            await inter.response.send_message("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.", ephemeral=True)
            return

        database.add_shop_role(role.id, price)
        embed = disnake.Embed(
            title="‚úÖ –†–æ–ª—å –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ú–∞–≥–∞–∑–∏–Ω",
            description=f"–†–æ–ª—å **{role.name}** (`{role.id}`) –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω –ø–æ —Ü–µ–Ω–µ `{price:,}` –º–æ–Ω–µ—Ç.",
            color=disnake.Color.green()
        )
        await inter.response.send_message(embed=embed)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞–≥–∞–∑–∏–Ω
        await self._update_shop_initial_message()

    @addrole.error
    async def addrole_error(self, inter: disnake.ApplicationCommandInteraction, error):
        if isinstance(error, commands.MissingRole):
            await inter.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        else:
            await inter.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}", ephemeral=True)

    @commands.slash_command(name="remrole", description="–£–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞. –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∞.")
    @commands.has_role(config.ADMIN_ROLE_ID)
    async def remrole(self, inter: disnake.ApplicationCommandInteraction, role: disnake.Role):
        if not database.get_shop_role_price(role.id):
            await inter.response.send_message("–≠—Ç–æ–π —Ä–æ–ª–∏ –Ω–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ.", ephemeral=True)
            return

        database.remove_shop_role(role.id)
        embed = disnake.Embed(
            title="‚ùå –†–æ–ª—å –£–¥–∞–ª–µ–Ω–∞ –∏–∑ –ú–∞–≥–∞–∑–∏–Ω–∞",
            description=f"–†–æ–ª—å **{role.name}** (`{role.id}`) —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.",
            color=disnake.Color.red()
        )
        await inter.response.send_message(embed=embed)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞–≥–∞–∑–∏–Ω
        await self._update_shop_initial_message()

    @remrole.error
    async def remrole_error(self, inter: disnake.ApplicationCommandInteraction, error):
        if isinstance(error, commands.MissingRole):
            await inter.response.send_message("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        else:
            await inter.response.send_message(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}", ephemeral=True)

    async def _update_shop_initial_message(self):
        # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ –º–∞–≥–∞–∑–∏–Ω–∞,
        # –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤–ª–µ–Ω–∞/—É–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å)
        shop_channel = self.bot.get_channel(config.SHOP_CHANNEL_ID)
        if shop_channel:
            async for msg in shop_channel.history(limit=5):
                if msg.author == self.bot.user and msg.embeds and "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω" in msg.embeds[0].title:
                    embed = disnake.Embed(
                        title="üõí –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω!",
                        description="–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏ —É–ª—É—á—à–µ–Ω–∏—è –∑–∞ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—É—é –≤–∞–ª—é—Ç—É.",
                        color=disnake.Color.blue()
                    )
                    embed.set_thumbnail(url="https://i.imgur.com/your_shop_icon.png") # –ó–∞–º–µ–Ω–∏
                    embed.add_field(name="–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?", value="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞.", inline=False)
                    view = disnake.ui.View()
                    view.add_item(disnake.ui.Button(style=disnake.ButtonStyle.green, label="–û—Ç–∫—Ä—ã—Ç—å –ú–∞–≥–∞–∑–∏–Ω", custom_id="open_shop_menu"))
                    await msg.edit(embed=embed, view=view)
                    return

    @commands.Cog.listener("on_button_click")
    async def on_shop_button_click(self, inter: disnake.MessageInteraction):
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ interaction, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏ "Interaction Failed"
        # –î–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —ç—Ñ–µ–º–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if inter.component.custom_id == "open_shop_menu":
            embed = disnake.Embed(
                title="üõçÔ∏è –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é –ú–∞–≥–∞–∑–∏–Ω–∞",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:",
                color=disnake.Color.blue()
            )
            embed.set_footer(text=f"–í–∞—à –±–∞–ª–∞–Ω—Å: {database.get_user_data(inter.author.id)[1]:,} –º–æ–Ω–µ—Ç")
            view = ShopCategoriesView(self.bot)
            await inter.response.send_message(embed=embed, view=view, ephemeral=True)

        # –î–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é" –≤–Ω—É—Ç—Ä–∏ –º–∞–≥–∞–∑–∏–Ω–∞: —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —ç—Ñ–µ–º–µ—Ä–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        elif inter.component.custom_id == "shop_back_to_main":
            embed = disnake.Embed(
                title="üõçÔ∏è –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é –ú–∞–≥–∞–∑–∏–Ω–∞",
                description="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:",
                color=disnake.Color.blue()
            )
            embed.set_footer(text=f"–í–∞—à –±–∞–ª–∞–Ω—Å: {database.get_user_data(inter.author.id)[1]:,} –º–æ–Ω–µ—Ç")
            view = ShopCategoriesView(self.bot)
            await inter.response.edit_message(embed=embed, view=view)

        elif inter.component.custom_id.startswith("confirm_buy_"):
            parts = inter.component.custom_id.split("_")
            item_type = parts[2]
            item_id = parts[3] # –î–ª—è —Ä–æ–ª–µ–π —ç—Ç–æ ID, –¥–ª—è –∫–µ–π—Å–æ–≤/–∫—É–ø–æ–Ω–æ–≤ —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ

            price = 0
            if item_type == "role":
                try:
                    price = database.get_shop_role_price(int(item_id))
                except ValueError:
                    await inter.response.send_message("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ä–æ–ª–∏.", ephemeral=True)
                    await inter.message.edit(view=None)
                    return
            elif item_type == "case":
                price = config.CASE_PRICES.get(item_id)
            elif item_type == "coupon":
                price = config.COUPON_PRICES.get(item_id)

            if not price:
                await inter.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞.", ephemeral=True)
                await inter.message.edit(view=None) # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
                return

            user_data = database.get_user_data(inter.author.id)
            current_balance = user_data[1]

            if current_balance < price:
                await inter.response.send_message(f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç `{price - current_balance:,}` –º–æ–Ω–µ—Ç.", ephemeral=True)
                await inter.message.edit(view=None) # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
                return

            item_name = item_id.replace('_', ' ').title()
            if item_type == "role":
                role_to_buy = inter.guild.get_role(int(item_id))
                if not role_to_buy:
                    await inter.response.send_message("–≠—Ç–∞ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.", ephemeral=True)
                    await inter.message.edit(view=None)
                    return
                if role_to_buy in inter.author.roles:
                    await inter.response.send_message("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —ç—Ç–∞ —Ä–æ–ª—å.", ephemeral=True)
                    await inter.message.edit(view=None)
                    return
                item_name = role_to_buy.name

            database.update_user_balance(inter.author.id, -price)
            database.add_inventory_item(inter.author.id, item_type, item_id)

            embed = disnake.Embed(
                title="‚úÖ –ü–æ–∫—É–ø–∫–∞ –£—Å–ø–µ—à–Ω–∞!",
                description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ **{item_name}** –∑–∞ `{price:,}` –º–æ–Ω–µ—Ç.",
                color=disnake.Color.green()
            )
            embed.set_footer(text=f"–í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {database.get_user_data(inter.author.id)[1]:,} –º–æ–Ω–µ—Ç")
            await inter.response.edit_message(embed=embed, view=None) # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏

        elif inter.component.custom_id == "cancel_purchase":
            await inter.response.edit_message(content="–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", embed=None, view=None)

    @commands.Cog.listener("on_dropdown")
    async def on_shop_dropdown(self, inter: disnake.MessageInteraction):
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ interaction, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏ "Interaction Failed"
        selected_item_id = inter.values[0]
        item_type = ""
        price = 0
        item_name = ""

        if inter.component.custom_id == "select_buy_role":
            item_type = "role"
            role = inter.guild.get_role(int(selected_item_id))
            if not role:
                await inter.response.send_message("–í—ã–±—Ä–∞–Ω–Ω–∞—è —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
                return
            price = database.get_shop_role_price(int(selected_item_id))
            item_name = role.name
            if not price:
                await inter.response.send_message("–¶–µ–Ω–∞ –¥–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ.", ephemeral=True)
                return

        elif inter.component.custom_id == "select_buy_case":
            item_type = "case"
            price = config.CASE_PRICES.get(selected_item_id)
            item_name = selected_item_id.replace('_', ' ').title()
            if not price:
                await inter.response.send_message("–¶–µ–Ω–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∫–µ–π—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
                return

        elif inter.component.custom_id == "select_buy_coupon":
            item_type = "coupon"
            price = config.COUPON_PRICES.get(selected_item_id)
            item_name = selected_item_id.replace('_', ' ').title()
            if not price:
                await inter.response.send_message("–¶–µ–Ω–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∫—É–ø–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
                return
        else:
            return # –ù–µ –Ω–∞—à dropdown

        user_data = database.get_user_data(inter.author.id)
        current_balance = user_data[1]

        embed = disnake.Embed(
            title=f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏: {item_name}",
            description=f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ **{item_name}** –∑–∞ `{price:,}` –º–æ–Ω–µ—Ç.",
            color=disnake.Color.orange()
        )
        embed.add_field(name="–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å", value=f"`{current_balance:,}` –º–æ–Ω–µ—Ç", inline=False)
        embed.add_field(name="–û—Å—Ç–∞—Ç–æ–∫ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏", value=f"`{current_balance - price:,}` –º–æ–Ω–µ—Ç", inline=False)

        view = disnake.ui.View(timeout=60) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        view.add_item(disnake.ui.Button(label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É", style=disnake.ButtonStyle.green, custom_id=f"confirm_buy_{item_type}_{selected_item_id}"))
        view.add_item(disnake.ui.Button(label="–û—Ç–º–µ–Ω–∏—Ç—å", style=disnake.ButtonStyle.red, custom_id="cancel_purchase"))

        await inter.response.edit_message(embed=embed, view=view)


def setup(bot):
    bot.add_cog(Shop(bot))